// Generated by CoffeeScript 1.3.3
(function() {
  var clone, uniqueId;

  uniqueId = function(length) {
    var id;
    if (length == null) {
      length = 8;
    }
    id = "";
    while (id.length < length) {
      id += Math.random().toString(36).substr(2);
    }
    return id.substr(0, length);
  };

  clone = function(obj) {
    var flags, key, newInstance;
    if (!(obj != null) || typeof obj !== 'object') {
      return obj;
    }
    if (obj instanceof Date) {
      return new Date(obj.getTime());
    }
    if (obj instanceof RegExp) {
      flags = '';
      if (obj.global != null) {
        flags += 'g';
      }
      if (obj.ignoreCase != null) {
        flags += 'i';
      }
      if (obj.multiline != null) {
        flags += 'm';
      }
      if (obj.sticky != null) {
        flags += 'y';
      }
      return new RegExp(obj.source, flags);
    }
    newInstance = new obj.constructor();
    for (key in obj) {
      newInstance[key] = clone(obj[key]);
    }
    return newInstance;
  };

  this.after = function(ms, cb) {
    return setTimeout(cb, ms);
  };

  this.prevent = function(timeout) {
    return clearTimeout(timeout);
  };

  this.every = function(ms, cb) {
    return setInterval(cb, ms);
  };

  this.finish = function(interval) {
    return clearInterval(interval);
  };

  this.Utils = {
    uniqueId: uniqueId,
    clone: clone,
    after: after,
    every: every
  };

}).call(this);
